SET	FC	0000	;left points
SET	FD	0800	;DELAY TIMER
SET	FF	0000	;SHOULD ALWAYS BE ZERO
SET	FE	0001	;ALWAYS ONE
SET	FB	0003	;LENFTH OF LINE
SET	FA	0000	;right points
SET	F9	0000	;RIGHT POT
SET	F8	0000	;LEFT POT
SET	F7	0003	;ALWAYS THREE
SET	F6	0080	;VALUE FOR DISPLAYING LINES 
SET	F5	0001	;YPOSLEFT
SET	F4	0002	;XPOSLEFT
SET	F3	0001	;YPOSRIGHT
SET	F2	003F	;XPOSRIGHT
SET	F1	003E	;MAX WIDTH
SET	F0	0020	;BALL XPOS RESET
SET	EF	0018	;BALL YPOS RESET
SET	EE	0020	;BALL	XPOS
SET	ED	0018	;BALL	YPOS
SET	EC	0000	;BALL XDIRECTION
SET	EB	0040	;BALL	XSPEED	HIGHER IS SLOWER
SET	EA	0000	;BALL	YDIRECTION
SET	E9	0040	;BALL	YSPEED	HIGHER IS SLOWER
SET	E8	0020	;BALL NEW XPOS
SET	E7	0017	;BALL	NEW YPOS
SET	E6	0000	;BALL SPEED XCOUNTER
SET	E5	0000	;BALL	SPEED	YCOUNTER
SET	E4	002E	;MAX	HEIGHT
SET	E3	0004	;ALWAYS FOUR
SET	E2	0038	;LEFT PLAYER FIRST POINT
SET	E1	0030	;LEFT PLAYER SECOND POINT
SET	E0	0000	;TEMP
SET	DF	0048	;RIGHT PLAYER FIRST POINT
SET	DE	0050	;RIGHT PLAYER SECOND POINT


GET_VALUES:
LOAD	G0	FF	;SET MUX TO 0
LOAD	G2	MUX_JUMPBACK	;SET MUX JUMPBACK
COMB	G2	$GET1	;SET MUX JUMPBACK
STORE	G2	MUX_JUMPBACK	;SET MUX JUMPBACK
BRA	MUX	;JUMP TO MUX
GET1:
STORE	G0	F8	;LEFT POT
COMB	G2	$GET2	;SET MUX JUMPBACK
STORE	G2	MUX_JUMPBACK	;SET MUX JUMPBACK
LOAD	G0	FE	;LOAD one
BRA	MUX	;JUMP TO MUX
GET2:
STORE	G0	F9	;RIGHT POT
BRA	BALL_CONTROL

	;LOADS FROM MUX POS IN FB TO g0- dont use g2
MUX:
OUT	G0	;send to output
LOAD	G0	DELAY_BEQ	
COMB	G0	$MUX2
STORE	G0	DELAY_BEQ
BRA	DELAY	;delay
MUX2:
IN	G0
MUX_JUMPBACK:
BRA	00

	;dont use g2
DELAY:
LOAD	G0	FF
DELAY_SUB:
ADD	G0	FE
CMP	G0	FD
DELAY_BEQ:
BEQ	00
BRA	DELAY_SUB

	;G0 XPOS, G1 YPOS, G2 COLOR, G3 NUMBER OF ELEMENS BELOW (0=1),TEMP E0
DRAW:
LSR	G0	$06	;XPOS IS IN G0 SO LEFTSHIFT
STORE	G1	E0
ADD	G0	E0	;ADD YPOS
LSR	G0	$01
STORE	G2	E0	
ADD	G0	E0	;ADD COLOR
STOREV	G0	;SEND TO GM
STORE	G3	E0
LOAD	G3	FF
DRAW_LOOP:
CMP	G3	E0
DRAW_JUMPBACK:
BEQ	00
ADD	G0	F6
STOREV	G0
ADD	G3	FE
BRA	DRAW_LOOP

	;YPOSLEFT=F5 XPOSLEFT=F4 LEFTPOT=F8 RIGHTPOS=F9 YPOSRIGHT=F3 XPOSRIGHT=F2 F6 MAGIC VALUE
GRAPHICS:
	;LEFT LINE
LOAD	G0	DRAW_JUMPBACK	
COMB	G0	$LEFT_LINE
STORE	G0	DRAW_JUMPBACK
LOAD	G0	F5
LOAD	G1	F4
LOAD	G2	FF
LOAD	G3	FB
BRA	DRAW	;delay
LEFT_LINE:
LOAD	G0	F8	;LOAD LEFTPOT
STORE	G0	F5	;STORE	IN YPOSLEFT
LOAD	G1	DRAW_JUMPBACK	
COMB	G1	$LEFT_LINE1
STORE	G1	DRAW_JUMPBACK
LOAD	G1	F4
LOAD	G2	FE
LOAD	G3	FB
BRA	DRAW	;delay
LEFT_LINE1:
LOAD	G1	DRAW_JUMPBACK	
COMB	G1	$RIGHT_LINE
STORE	G1	DRAW_JUMPBACK
LOAD	G0	F3
LOAD	G1	F2
LOAD	G2	FF
LOAD	G3	FB
BRA	DRAW	;delay
RIGHT_LINE:
LOAD	G0	F9	;LOAD RIGHTPOT
STORE	G0	F3	;STORE	IN YPOSRIGHT CHANGED FROM F4
LOAD	G1	DRAW_JUMPBACK	
COMB	G1	$RIGHT_LINE1
STORE	G1	DRAW_JUMPBACK
LOAD	G1	F2
LOAD	G2	FE
LOAD	G3	FB
BRA	DRAW
RIGHT_LINE1:

	;BALL XPOS EE, BALL YPOS ED, BALL NEW XPOS E8,BALL NEW YPOS E7 	
LOAD	G0	ED	;LOAD YPOS
LSR	G0	$06	;MAKE PLACE FOR XPOS
ADD	G0	EE	;ADD	XPOS
LSR	G0	$01	;MAKE PLACE FOR COLOR(BLACK)
STOREV	G0	;SEND TO GM
LOAD	G0	E8	;LOAD NEW XPOS
STORE	G0	EE	;REPLACE OLD XPOS
LOAD	G0	E7	;LOAD NEW YPOS
STORE	G0	ED	;REPLACE OLD YPOS
LSR	G0	$06	;MAKE PLACE FOR XPOS
ADD	G0	EE	;ADD	XPOS
LSR	G0	$01	;MAKE PLACE FOR COLOR(BLACK)
ADD	G0	FE	;ADD WHITE COLOR
STOREV	G0	;SEND TO GM

	;LEFTPOINTS FC,RIGHT POINTS FA, LEFT FIRST E2, LEFT SECOND E1, LEFT THIRD E0, RIGHT FIRST DF, RIGHT SECOND DE, RIGHT THIRD DD ;
LOAD	G0	E2
STOREV	G0
LOAD	G1	E1
STOREV	G1
LOAD	G3	FC
CMP	G3	FF
BEQ	RIGHT_POINTS
ADD	G0	FE
STOREV	G0
CMP	G3	FE
BEQ	RIGHT_POINTS
ADD	G1	FE
STOREV	G1
RIGHT_POINTS:
LOAD	G0	DF
STOREV	G0
LOAD	G1	DE
STOREV	G1
LOAD	G3	FA
CMP	G3	FF
BEQ	GET_VALUES
ADD	G0	FE
STOREV	G0
CMP	G3	FE
BEQ	GET_VALUES
ADD	G1	FE
STOREV	G1
BRA	GET_VALUES	;JUMP BACK TO LOOP

	;XPOS BALL EE,YPOS BALL ED,XDIRECTION EC,XSPEED EB,YDIRECTION EA,YSPEED E9,NEW XPOS E8,NEW YPOS E7,XCOUNTER E6,YCOUNTER E5,E4 MAX HEIGHT, MAX WIDTH F1
	;YPOSLEFT=F5 XPOSLEFT=F4 LEFTPOT=F8 RIGHTPOS=F9 YPOSRIGHT=F3 XPOSRIGHT=F2 F6 MAGIC VALUE
COLLISION_DETECTION:
LOAD	G0	ED	;LOAD YPOS
CMP	G0	FF	;COMPARE YPOS WITH ZERO
BEQ	CHANGE_DIRECTION_DOWN
CMP	G0	E4	;COMPARE WITH MAX HEIGHT
BEQ	CHANGE_DIRECTION_UP
COLLISION_DETECTION_RETURN1:
LOAD	G0	EE	;LOAD XPOS
CMP	G0	F7	;COMPARE XPOS WITH three
BEQ	CHECK_COLLISION_LEFT
CMP	G0	F1	;COMPARE XPOS WITH MAX WIDTH
BEQ	CHECK_COLLISION_RIGHT
COLLISION_DETECTION_RETURN2:
BRA	GRAPHICS

CHECK_COLLISION_RIGHT:
LOAD	G0	F3	;LOAD YPOSRIGHT
CMP	G0	ED	;COMPARE YPOSRIGHT AND YPOS BALL
BEQ	CHANGE_DIRECTION_LEFT
ADD	G0	FE	;ADD ONE
CMP	G0	ED	;COMPARE YPOSRIGHT AND YPOS BALL
BEQ	CHANGE_DIRECTION_LEFT
ADD	G0	FE	;ADD ONE
CMP	G0	ED	;COMPARE YPOSRIGHT AND YPOS BALL
BEQ	CHANGE_DIRECTION_LEFT
ADD	G0	FE	;ADD ONE
CMP	G0	ED	;COMPARE YPOSRIGHT AND YPOS BALL
BEQ	CHANGE_DIRECTION_LEFT
LOAD	G0	FC
ADD	G0	FE
STORE	G0	FC	;GIVE LEFT PLAYR ONE POINT
BRA	SOFT_RESET

CHECK_COLLISION_LEFT:
LOAD	G0	F5	;LOAD YPOSLEFT
CMP	G0	ED	;COMPARE YPOSLEFT AND YPOS BALL
BEQ	CHANGE_DIRECTION_RIGHT
ADD	G0	FE	;ADD ONE
CMP	G0	ED	;COMPARE YPOSLEFT AND YPOS BALL
BEQ	CHANGE_DIRECTION_RIGHT
ADD	G0	FE	;ADD ONE
CMP	G0	ED	;COMPARE YPOSLEFT AND YPOS BALL
BEQ	CHANGE_DIRECTION_RIGHT
ADD	G0	FE	;ADD ONE
CMP	G0	ED	;COMPARE YPOSLEFT AND YPOS BALL
BEQ	CHANGE_DIRECTION_RIGHT
LOAD	G0	FA
ADD	G0	FE
STORE	G0	FA	;GIVE RIGHT PLAYR ONE POINT
BRA	SOFT_RESET

CHANGE_DIRECTION_RIGHT:
LOAD	G0	FE	;LOAD ONE
STORE	G0	EC	;STORE XDIRECTION=ONE
BRA	COLLISION_DETECTION_RETURN2

CHANGE_DIRECTION_LEFT:
LOAD	G0	FF	;LOAD ZERO
STORE	G0	EC	;STORE XDIRECTION=ZERO
BRA	COLLISION_DETECTION_RETURN2

CHANGE_DIRECTION_DOWN:
LOAD	G0	FE	;LOAD ONE
STORE	G0	EA	;STORE YDIRECTION
BRA	COLLISION_DETECTION_RETURN1

CHANGE_DIRECTION_UP:
LOAD	G0	FF	;LOAD ZERO
STORE	G0	EA	;STORE YDIRECTION
BRA	COLLISION_DETECTION_RETURN1




	;XPOS EE,YPOS ED,XDIRECTION EC,XSPEED EB,YDIRECTION EA,YSPEED E9,NEW XPOS E8,NEW YPOS E7,XCOUNTER E6,YCOUNTER E5
BALL_CONTROL:
LOAD	G0	E6	;LOAD XCOUNTER
CMP	G0	EB	;COMPARE XCOUNTER AND XSPEED
BEQ	CHANGE_X
X_RETURN:
LOAD	G0	E5	;LOAD YCOUNTER
CMP	G0	E9	;COMPARE YCOUNTER AND YSPEED
BEQ	CHANGE_Y
Y_RETURN:
LOAD	G0	E6	
ADD	G0	FE
STORE	G0	E6	;ADD ONE TO XCOUNTER
LOAD	G0	E5
ADD	G0	FE
STORE	G0	E5	;ADD ONE TO YCOUNTER
BRA	COLLISION_DETECTION

CHANGE_Y:
LOAD	G0	FF
STORE	G0	E5	;RESET COUNTER
LOAD	G0	EA	;LOAD YDIRECTION
CMP	G0	FF	;IF ZERO
LOAD	G0	ED	;LOAD YPOS
BEQ	DECREASE_Y
ADD	G0	FE	;SUBTRACT ON
BRA	INCREASE_Y
DECREASE_Y:
SUB	G0	FE	;SUBTRACT ON
INCREASE_Y:
STORE	G0	E7	;STORE NEW YPOS
BRA	Y_RETURN

CHANGE_X:
LOAD	G0	FF
STORE	G0	E6	;RESET COUNTER
LOAD	G0	EC	;LOAD	XDIRECTION
CMP	G0	FF	;IF ZERO
LOAD	G0	EE	;LOAD	XPOS
BEQ	DECREASE_X
ADD	G0	FE	;ADD 1
BRA	INCREASE_X
DECREASE_X:
SUB	G0	FE	;SUBTRACT 1
INCREASE_X:
STORE	G0	E8	;STORE IN NEW XPOS
BRA	X_RETURN	;JUMP BACK TO BALL_CONTROL

	;BALL XPOS RESET F0, BALL YPOS RESET EF,BALL NEW XPOS E8, BALL NEW YPOS E7,right pot f9,left pot f8, 0080 f6,XSPEED EB, YSPEED E9
SOFT_RESET:
LOAD	G0	F0
STORE	G0	E8
LOAD	G0	EF
STORE	G0	E7
LOAD	G0	F9
AND	G0	FE
STORE	G0	EC
LOAD	G0	FA
CMP	G0	FB
BEQ	HARD_RESET
LOAD	G0	FC
CMP	G0	FB
BEQ	HARD_RESET
BRA	GRAPHICS

HARD_RESET:
LOAD	G0	FF
STORE	G0	FA
STORE	G0	FC
BRA	GRAPHICS
